name: Build docker images and push it in Harbor

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  PROJECT: 'usatlas'
  GITHUB_ACTIONS: 'true'
  REGISTRY: 'hub.opensciencegrid.org'
  CACHE_PATH: /tmp/.buildx-cache
  NB_USER: "atlas-coffea"
  NB_UID: "13243"
  NB_GID: "5741"
  HUB: "hub.opensciencegrid.org"
  XCACHE_HOST: "xcache.uc.mwt2.org"
  CACHE_PREFIX: xcache.uc.mwt2.org
  LABEXTENTION_CLUSTER: "SSL AF HTCondor Cluster"
  LABEXTENTION_FACTORY_CLASS: CoffeaCasaCluster
  LABEXTENTION_FACTORY_MODULE: coffea_casa
  CONDOR_HOST: head01.af.uchicago.edu
  COLLECTOR_NAME: "UChicago AF"
  UID_DOMAIN: "af.uchicago.edu"
  SCHEDD_HOST: "head01.af.uchicago.edu"
  WORKER_IMAGE: "hub.opensciencegrid.org/usatlas/cc-analysis-ubuntu"

jobs:
  dask-base:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver-opts: network=host
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROJECT }}/cc-base-ubuntu
          flavor: latest=false
          tags: |
            type=ref,event=tag
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v3.0.0
        with:
          push: true
          cache-from: |
            type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}
          builder: ${{ steps.buildx.outputs.name }}
          context: docker/
          file: docker/Dockerfile.cc-base-ubuntu
          tags: |
            ${{ steps.meta.outputs.tags }}
          build-args: |
            TAG=${{ github.ref_name }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY=${{ env.REGISTRY }}
            NB_USER=${{ env.NB_USER }}
            NB_UID=${{ env.NB_UID }}
            NB_GID=${{ env.NB_GID }}
            LABEXTENTION_CLUSTER=${{ env.LABEXTENTION_CLUSTER }}
            LABEXTENTION_FACTORY_CLASS=${{ env.LABEXTENTION_FACTORY_CLASS }}
            LABEXTENTION_FACTORY_MODULE=${{ env.LABEXTENTION_FACTORY_MODULE }}
            CONDOR_HOST=${{ env.CONDOR_HOST }}
            COLLECTOR_NAME=${{ env.COLLECTOR_NAME }}
            UID_DOMAIN=${{ env.UID_DOMAIN }}
            SCHEDD_HOST=${{ env.SCHEDD_HOST }}

  dask-cc:
    runs-on: ubuntu-latest
    needs: [dask-base]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver-opts: network=host
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROJECT }}/cc-ubuntu
          flavor: latest=false
          tags: |
            type=ref,event=tag
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v3.0.0
        with:
          #push: ${{ github.event_name != 'pull_request' }}
          push: true
          cache-from: |
            type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}
          context: docker/
          file: docker/Dockerfile.cc-ubuntu
          tags: |
            ${{ steps.meta.outputs.tags }}
          build-args: |
            TAG=${{ github.ref_name }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY=${{ env.REGISTRY }}
            NB_USER=${{ env.NB_USER }}
            NB_UID=${{ env.NB_UID }}
            NB_GID=${{ env.NB_GID }}
            HUB=${{ env.HUB }}
            XCACHE_HOST=${{ env.XCACHE_HOST }}
            CACHE_PREFIX=${{ env.CACHE_PREFIX}}
            LABEXTENTION_CLUSTER=${{ env.LABEXTENTION_CLUSTER }}
            LABEXTENTION_FACTORY_CLASS=${{ env.LABEXTENTION_FACTORY_CLASS }}
            LABEXTENTION_FACTORY_MODULE=${{ env.LABEXTENTION_FACTORY_MODULE }}
            CONDOR_HOST=${{ env.CONDOR_HOST }}
            COLLECTOR_NAME=${{ env.COLLECTOR_NAME }}
            UID_DOMAIN=${{ env.UID_DOMAIN }}
            SCHEDD_HOST=${{ env.SCHEDD_HOST }}
            WORKER_IMAGE=${{ env.WORKER_IMAGE }}

#  dask-skyhook:
#    runs-on: ubuntu-latest
#    needs: [dask-cc]
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v2
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          version: latest
#          driver-opts: network=host
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        id: cache
#        with:
#          path: ${{ env.CACHE_PATH }}
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#      - name: Login to Harbor Hub
#        if: success() && github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ secrets.HARBOR_USER }}
#          password: ${{ secrets.HARBOR_PASSWORD }}
#      - name: Build
#        uses: docker/docker/build-push-action@v3.0.0
#        with:
#          push: ${{ github.event_name != 'pull_request' }}
#          cache-from: |
#            type=local,src=${{ env.CACHE_PATH }}
#          cache-to: type=local,dest=${{ env.CACHE_PATH }}
#          context: docker/
#          file: docker/Dockerfile.cc-base-centos7
#          tags: |
#            ${{ env.REGISTRY }}/coffea-casa/cc-ubuntu-skyhook:${{ steps.meta.outputs.tags }}
#          build-args: |
#            TAG=${{ github.ref_name }}
#            PROJECT=${{ env.PROJECT }} 
#            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
#            REGISTRY=${{ env.REGISTRY }}
#      - name: Cleanup
#        run: |
#          docker stop registry

  dask-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver-opts: network=host
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROJECT }}/cc-analysis-ubuntu
          flavor: latest=false
          tags: |
            type=ref,event=tag
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          #push: ${{ github.event_name != 'pull_request' }}
          push: true
          #outputs: type=docker,dest=/tmp/cc-analysis-ubuntu.tar
          cache-from: |
            type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}
          context: docker/
          file: docker/Dockerfile.cc-analysis-ubuntu
          tags: |
            ${{ steps.meta.outputs.tags }}
          build-args: |
            TAG=${{ github.ref_name }} 
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY=${{ env.REGISTRY }}
            NB_USER=${{ env.NB_USER }}
            NB_UID=${{ env.NB_UID }}
            NB_GID=${{ env.NB_GID }}
            XCACHE_HOST=${{ env.XCACHE_HOST }}
            CACHE_PREFIX=${{ env.CACHE_PREFIX}}

#  dask-analysis-skyhook:
#    runs-on: ubuntu-latest
#    needs: [dask-analysis]
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v2
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#        with:
#          version: latest
#          driver-opts: network=host
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        id: cache
#        with:
#          path: ${{ env.CACHE_PATH }}
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#      - name: Login to Harbor Hub
#        if: success() && github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ secrets.HARBOR_USER }}
#          password: ${{ secrets.HARBOR_PASSWORD }}
#      - name: Build
#        uses: docker/build-push-action@v3.0.0
#        with:
#          #push: ${{ github.event_name != 'pull_request' }}
#          push: true
#          cache-from: |
#            type=local,src=${{ env.CACHE_PATH }}
#          cache-to: type=local,dest=${{ env.CACHE_PATH }}
#          context: docker/
#          file: docker/Dockerfile.cc-analysis-ubuntu-skyhook
#          tags: |
#            ${{ env.REGISTRY }}/coffea-casa/cc-analysis-ubuntu-skyhook:${{ steps.meta.outputs.tags }}
#          build-args: |
#            TAG=${{ github.ref_name }}
#            PROJECT=${{ env.PROJECT }} 
#            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
#            REGISTRY=${{ env.REGISTRY }}
